const express = require('express');
const bodyParser = require('body-parser');
const fs = require('fs');
const app = express();
const util = require('util');
const port = process.argv.length < 3?3000:process.argv[2];

const files = [];
files["favicon.ico"] = "AAABAAEAGBgAAAEACADIBgAAFgAAACgAAAAYAAAAMAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADhjwAA4ZAAAOKQAADikQAA4pIDAOKTBQDilAYA4pQHAOOVCwDjlgsA45YNAOOXDgDkmhUA5JsXAOWdHQDmoCUA5qIoAOaiKQDmoyoA6Ko7AOmrPgDprkMA6a5EAOqxSwDqsk4A67NQAOu0UQDrtFIA67ZXAO28ZADuv2sA7sBtAO7AbwDvw3QA78R4AO/FeQDwxnsA8MZ8APDHfwDyzo8A8s+RAPPUmwD01Z8A9NagAPTXowD02KYA9NmnAPXaqQD12qoA9dutAPXcrgD13K8A9dywAPbeswD237UA9t+2APbgtwD34boA9+G7APfivQD3474A9+O/APfkwQD45cIA+OXEAPjmxQD46MoA+enMAPns0wD67NQA+/DeAP779wD+/PgA/vz5AP78+gD+/vwgIBTU1NTU1NTU1NTU1NTU1NAQMDAwMDAwMDAwMCTU1NTU1NTU1NTU0CAwMDAwMDAwMDAwMDAk1NTU1NTU1NTQEDAwMDAwMDAwMDAwMDAwFNTU1NTU1NAQMDAwMDAwMDAwMDAwMDAwMBTU1NTU0CAwMDAwMDAwMDAwMDAwMDAwMDAk1NTQEDAwMDAwMDBQkJBAMDAwMDAwMDAwFNTQMDAwMDAxIjMz87KR0OAwMDAwMDAwNNTQMDAwMDETpMTExMTEs9HAMDAwMDAwNNAQMDAwMDJUxMTExMTExMRhkDAwMDAwMBAAMDAwMJOUxMTExMTExMTDYMAwMDAwMCAgMDAwMNQ0hISEhISEhISUoiEAMDAwMCAgMDAwMDFi0vOCw1NC43IUVHRBUDAwMCAAMDAwMDCScrQS4+PDIwF0U9Hw8DAwMCAQMDAwMDAwkUQjFAPiQJBiYaAwMDAwMBTQMDAwMDAwMLGxMYKiADAwgDAwMDAwNNTQMDAwMDAwMDAwMKKB4DAwMDAwMDAwNNTQMDAwMDAwMDAwMDCQcDAwMDAwMDAwJNTU0CAwMDAwMDAwMDAwMDAwMDAwMDAk1NTU1NAQMDAwMDAwMDAwMDAwMDAwMBTU1NTU1NTQEDAwMDAwMDAwMDAwMDAwJNTU1NTU1NTU0CAwMDAwMDAwMDAwMDAk1NTU1NTU1NTU1NAgMDAwMDAwMDAwMCTU1NTU1NTU1NTU1NTU1NAQICAgABTU1NTU1NTU1N/4H/APwAPwD4AB8A8AAPAOAABwDAAAMAgAABAIAAAQCAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAABAIAAAQCAAAEAwAADAOAABwDwAA8A+AAfAPwAPwD/gf8A";
files["index.html"] = "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVzIj4KPGhlYWQ+CiAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KICA8bGluayByZWw9Imljb24iIHR5cGU9ImltYWdlL3gtaWNvbiIgaHJlZj0iZmF2aWNvbi5pY28iPgogIDwhLS1saW5rIHJlbD0iaWNvbiIgaHJlZj0iZmF2aWNvbi5wbmciIHR5cGU9ImltYWdlL3BuZyItLT4KICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJqcy9tYWluLmpzIj48L3NjcmlwdD4KICA8dGl0bGU+Q29uc29sYSBkZSBBZG1pbmlzdHJhY2nDs24gcGFyYSBEb2NrZXI8L3RpdGxlPgogIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+PC9zdHlsZT4KPC9oZWFkPgo8Ym9keT4KICA8IS0tIEJhcnJhIGRlIG1lbsO6IC0tPgogPGRpdiBjbGFzcz0ibmF2YmFyIj4KICAgIDxkaXY+CiAgICAgIDxsaSBpZD0ibG9nbyI+CiAgICAgICAgPGEgb25jbGljaz0iaW50cm8oKSIgaHJlZj0iIyIgb25tb3VzZWVudGVyPSJjbGVhblNNZW51KCkiPgogICAgICAgICAgPHN2ZyBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyB0b3A6IC0wLjN2aDsiIHdpZHRoPSIyNHB4IiBoZWlnaHQ9IjI0cHgiIHZpZXdCb3g9IjAgMCAxMDI0IDEwMjQiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+PGNpcmNsZSBjeD0iNTEyIiBjeT0iNTEyIiByPSI1MTIiIHN0eWxlPSJmaWxsOiMwMDkxZTIiLz48cGF0aCBkPSJNODI3LjMgNDYxLjVjLTEuNi0xLjMtMTYuMS0xMi4yLTQ2LjctMTIuMi04LjEgMC0xNi4yLjYtMjQuMiAyLjEtNS45LTQwLjctMzkuNS02MC41LTQxLTYxLjRsLTguMi00LjgtNS40IDcuOGMtNi44IDEwLjUtMTEuNyAyMi0xNC42IDM0LjItNS41IDIzLjItMi4yIDQ1IDkuNiA2My42LTE0LjIgNy45LTM3LjEgOS45LTQxLjcgMTBIMjc3Yy05LjkgMC0xNy45IDgtMTcuOSAxNy45LS40IDMzLjEgNS4yIDY2IDE2LjUgOTcuMSAxMyAzNC4yIDMyLjQgNTkuMyA1Ny42IDc0LjcgMjguMiAxNy4zIDc0LjEgMjcuMiAxMjYuMiAyNy4yIDIzLjUuMSA0Ny0yLjEgNzAuMS02LjQgMzIuMS01LjkgNjMtMTcuMSA5MS40LTMzLjIgMjMuNC0xMy42IDQ0LjUtMzAuOCA2Mi40LTUxLjEgMjkuOS0zMy45IDQ3LjgtNzEuNyA2MS4xLTEwNS4yaDUuM2MzMi44IDAgNTMtMTMuMSA2NC4xLTI0LjEgNy40LTcgMTMuMi0xNS41IDE2LjktMjVsMi4zLTYuOS01LjctNC4zek0zMTIgNDg5LjloNTAuN2MyLjQgMCA0LjQtMiA0LjQtNC40di00NS4xYzAtMi40LTItNC40LTQuNC00LjVIMzEyYy0yLjQgMC00LjQgMi00LjQgNC40djQ1LjJjMCAyLjUgMiA0LjQgNC40IDQuNG02OS45IDBoNTAuN2MyLjQgMCA0LjQtMiA0LjQtNC40di00NS4xYzAtMi40LTItNC40LTQuNC00LjVoLTUwLjdjLTIuNSAwLTQuNSAyLTQuNSA0LjV2NDUuMWMwIDIuNSAyIDQuNCA0LjUgNC40bTcwLjguMWg1MC43YzIuNCAwIDQuNC0yIDQuNC00LjR2LTQ1LjFjMC0yLjQtMi00LjQtNC40LTQuNWgtNTAuN2MtMi40IDAtNC40IDItNC40IDQuNHY0NS4yYzAgMi40IDIgNC4zIDQuNCA0LjRtNzAuMSAwaDUwLjdjMi40IDAgNC40LTIgNC41LTQuNHYtNDUuMWMwLTIuNS0yLTQuNS00LjUtNC41aC01MC43Yy0yLjQgMC00LjQgMi00LjQgNC40djQ1LjJjMCAyLjQgMS45IDQuNCA0LjQgNC40bS0xNDEtNjVoNTAuN2MyLjQgMCA0LjQtMiA0LjQtNC41di00NS4xYzAtMi40LTItNC40LTQuNC00LjRoLTUwLjdjLTIuNSAwLTQuNCAyLTQuNSA0LjR2NDUuMWMuMSAyLjUgMi4xIDQuNSA0LjUgNC41bTcwLjkgMGg1MC43YzIuNCAwIDQuNC0yIDQuNC00LjV2LTQ1LjFjMC0yLjQtMi00LjQtNC40LTQuNGgtNTAuN2MtMi40IDAtNC40IDItNC40IDQuNHY0NS4xYzAgMi41IDIgNC41IDQuNCA0LjVtNzAuMSAwaDUwLjdjMi41IDAgNC40LTIgNC41LTQuNXYtNDUuMWMwLTIuNS0yLTQuNC00LjUtNC40aC01MC43Yy0yLjQgMC00LjQgMi00LjQgNC40djQ1LjFjMCAyLjUgMS45IDQuNSA0LjQgNC41bTAtNjQuOWg1MC43YzIuNSAwIDQuNS0yIDQuNS00LjV2LTQ1LjJjMC0yLjQtMi00LjQtNC41LTQuNGgtNTAuN2MtMi40IDAtNC40IDItNC40IDQuNHY0NS4yYzAgMi41IDEuOSA0LjUgNC40IDQuNU01OTMuNCA0OTBoNTAuN2MyLjQgMCA0LjQtMiA0LjQtNC40di00NS4xYzAtMi41LTItNC40LTQuNC00LjVoLTUwLjdjLTIuNCAwLTQuNCAyLTQuNCA0LjR2NDUuMmMwIDIuNCAyIDQuNCA0LjQgNC40IiBzdHlsZT0iZmlsbDojZmZmIi8+PC9zdmc+CiAgICAgICAgPC9hPgogICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9InN1Ym1lbnUtcGFyZW50Ij4KICAgICAgICA8YSB0aXRsZT0iU2Vydmlkb3IgQWRtaW5pc3RyYWRvIiBpZD0ic2VydmVybmFtZSIgaHJlZj0iIyIgb25tb3VzZWVudGVyPSJjbGVhblNNZW51KCkiPjwvYT4KICAgICAgICA8dWwgY2xhc3M9InN1Yi1tZW51Ij4KICAgICAgICAgIDxsaT48YSB0aXRsZT0iRXN0YSBhY2Npw7NuIHRlcm1pbmEgbGEgYXBsaWNhY2lvbiBkZWwgc2Vydmlkb3IgYWRtaW5pc3RyYWRvLiIgaHJlZj0iIyIgb25jbGljaz0iYXBwRXhpdCgpIj5DZXJyYXIgQXBsaWNhY2nDs248L2E+PC9saT4KICAgICAgICA8L3VsPgogICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9InN1Ym1lbnUtcGFyZW50Ij48YSBocmVmPSIjIiBvbm1vdXNlZW50ZXI9ImNsZWFuU01lbnUoKSI+SW1hZ2VuZXM8L2E+CiAgICAgICAgPHVsIGNsYXNzPSJzdWItbWVudSI+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iIyIgb25jbGljaz0ibGlzdEltZygpIj5MaXN0YXI8L2E+PC9saT4KICAgICAgICAgICA8bGk+PGEgaHJlZj0iIyIgb25jbGljaz0ibGlzdFJlcG9zKCkiPlJlcG9zaXRvcmlvczwvYT48L2xpPgogICAgICAgIDwvdWw+CiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz0ic3VibWVudS1wYXJlbnQiIG9ubW91c2VlbnRlcj0iY2xlYW5TTWVudSgpIiBvbmNsaWNrPSJsaXN0UHMoKSI+PGEgaHJlZj0iIyI+Q29udGVuZWRvcmVzPC9hPjwvbGk+CiAgICAgIDxsaT48YSBocmVmPSIjIiBvbmNsaWNrPSJhY2VyY2FkZSgpIiBvbm1vdXNlZW50ZXI9ImNsZWFuU01lbnUoKSI+QWNlcmNhIGRlPC9hPjwvbGk+CiAgICA8L2Rpdj4KICA8L2Rpdj4KICA8ZGl2IGNsYXNzPSJvdmVybGF5IiBpZD0ib3ZlcmxheSI+PC9kaXY+CQogIDxkaXYgY2xhc3M9ImNvbnRhaW5lciIgaWQ9ImNvbnRhaW5lciI+PC9kaXY+CiAgPCEtLWRpdiBjbGFzcz0iY29udGFpbmVyIj4KICAgIDxoMT7CoUJpZW52ZW5pZG8gYSBsYSBDb25zb2xhIGRlIEFkbWluaXN0cmFjacOzbiBwYXJhIERvY2tlciE8L2gxPgogICAgPGJyPgogICAgPGRpdiBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW4tdG9wOiAyMHB4OyI+CiAgICAgIDxsYWJlbCBjbGFzcz0iY2hlY2tib3gtY29udGFpbmVyIiBzdHlsZT0iY3Vyc29yOiBkZWZhdWx0OyI+PGI+UHJveWVjdG86PC9iPgoJICAgICAgPHNlbGVjdCBjbGFzcz0ic2VsZWN0LWJveCI+CgkJCTxvcHRpb24gdmFsdWU9ImhvamFkZXZpZGEiPkhvamEgZGUgVmlkYTwvb3B0aW9uPgoJCSAgPC9zZWxlY3Q+CgkgICA8L2xhYmVsPgoJICAgPGxhYmVsIGNsYXNzPSJjaGVja2JveC1jb250YWluZXIiIHN0eWxlPSJjdXJzb3I6IGRlZmF1bHQ7Ij48Yj5UaXBvOjwvYj4KCSAgICAgIDxzZWxlY3QgY2xhc3M9InNlbGVjdC1ib3giPgoJCQk8b3B0aW9uIHZhbHVlPSJob2phZGV2aWRhIj5CYWNrZW5kPC9vcHRpb24+CgkJICA8L3NlbGVjdD4KCSAgIDwvbGFiZWw+CiAgICAgICA8bGFiZWwgY2xhc3M9ImNoZWNrYm94LWNvbnRhaW5lciIgc3R5bGU9ImN1cnNvcjogZGVmYXVsdDsiPjxiPlZlcnNpb246PC9iPgkKICAgICAgCQk8aW5wdXQgdHlwZT0idGV4dCIgY2xhc3M9InRleHRib3giIHBsYWNlaG9sZGVyPSJpbmdyZXNlIHZlcnNpb24gaW1hZ2VuIj4KICAgICAgIDwvbGFiZWw+CiAgICAgICA8bGFiZWwgY2xhc3M9ImNoZWNrYm94LWNvbnRhaW5lciIgc3R5bGU9ImN1cnNvcjogZGVmYXVsdDsiPjxiPkFtYmllbnRlOjwvYj4KCSAgICAgIDxzZWxlY3QgY2xhc3M9InNlbGVjdC1ib3giPgoJCQk8b3B0aW9uIHZhbHVlPSJwcmVwcm9kIj5wcmVwcm9kPC9vcHRpb24+CgkJCTxvcHRpb24gdmFsdWU9InByb2QiPnByb2Q8L29wdGlvbj4KCQkgIDwvc2VsZWN0PgoJICA8L2xhYmVsPgoJICA8bGFiZWwgY2xhc3M9ImNoZWNrYm94LWNvbnRhaW5lciIgc3R5bGU9ImN1cnNvcjogZGVmYXVsdDsiPjxiPlNlcnZlcjo8L2I+CgkgICAgICA8c2VsZWN0IGNsYXNzPSJzZWxlY3QtYm94Ij4KCQkJPG9wdGlvbiB2YWx1ZT0iaGFyYm9yLWRldi5jb3BwZWwuaW8vPC1wcm95ZWN0by0+LzwtdGlwby0+OiI+aGFyYm9yLWRldi5jb3BwZWwuaW88L29wdGlvbj4KCQkJPG9wdGlvbiB2YWx1ZT0iaGFyYm9yLmNvcHBlbC5pby9yaF9jb25lY3RhLzwtdGlwby0+OiI+aGFyYm9yLmNvcHBlbC5pbzwvb3B0aW9uPgoJCSAgPC9zZWxlY3Q+CgkgIDwvbGFiZWw+CgkgIDxsYWJlbCBjbGFzcz0iY2hlY2tib3gtY29udGFpbmVyIiBzdHlsZT0iY3Vyc29yOiBkZWZhdWx0OyI+CgkgICAgIDxhIGhyZWY9IiMiIGNsYXNzPSJidG4iIG9uY2xpY2s9Im9wZW5EaWFsb2coKSI+Q3JlYXIgSW1hZ2VuPC9hPgoJICA8L2xhYmVsPgogICAgPC9kaXY+CiAgICA8aDI+SW3DoWdlbmVzIERvY2tlciBlbiBlbCBTZXJ2aWRvcjwvaDI+CiAgPHRhYmxlPgogICAgPHRoZWFkPgogICAgICA8dHI+CiAgICAgIAk8dGggc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsiPjxsYWJlbCBjbGFzcz0iY2hlY2tib3gtY29udGFpbmVyIj4KCQkgIDxpbnB1dCBpZD0iY2hrXzAiIHR5cGU9ImNoZWNrYm94IiBjbGFzcz0iY2hlY2tib3gtaW5wdXQiPgoJCSAgPHNwYW4gY2xhc3M9ImNoZWNrYm94LWluZGljYXRvciI+CgkJICAgIDxzcGFuIGNsYXNzPSJjaGVja2JveC1jaGVja21hcmsiPjwvc3Bhbj4KCQkgIDwvc3Bhbj4KCQk8L2xhYmVsPjwvdGg+CiAgICAgICAgPHRoPlJFUE9TSVRPUlk8L3RoPgogICAgICAgIDx0aD5UQUc8L3RoPgogICAgICAgIDx0aD5JTUFHRSBJRDwvdGg+CiAgICAgICAgPHRoPkNSRUFURUQ8L3RoPgogICAgICAgIDx0aD5TSVpFPC90aD4KICAgICAgPC90cj4KICAgIDwvdGhlYWQ+CiAgICA8dGJvZHkgaWQ9InRib2R5SW1ncyI+CiAgICA8L3Rib2R5PgogIDwvdGFibGUtLT4KPC9ib2R5Pgo8L2h0bWw+";
files["intro.html"] = "";
files["listImg.html"] = "";
files["listRepos.html"] = "PGgyPlJlcG9zaXRvcmlvcyBEb2NrZXIgZW4gPGIgc3R5bGU9ImNvbG9yOiAjMDA3NWI2OyI+e3NlcnZlcm5hbWV9PC9iPjwvaDI+Cjx0YWJsZT4KICA8dGhlYWQ+CiAgICA8dHI+CiAgICAgIDx0aD4KICAgICAgICA8YSBocmVmPSIjIiBjbGFzcz0iYnRuIGJ0bi1zZWNvbmRhcnkiIHN0eWxlPSJtYXJnaW4tbGVmdDogMTBweDsgaGVpZ2h0OiAyMHB4OyIgb25jbGljaz0ib3BlbkFkZFJlcG8oKSI+CiAgICAgICAgICA8ZGl2IHN0eWxlPSJ3aWR0aDogMzBweDsgZmxvYXQ6IGxlZnQ7IHBvc2l0aW9uOiByZWxhdGl2ZTsgdG9wOiAtMC4ydmgiPgogICAgICAgICAgICA8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgdmVyc2lvbj0iMS4wIiB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdCb3g9IjAgMCAxMjgwIDEyODAiIHByZXNlcnZlQXNwZWN0UmF0aW89InhNaWRZTWlkIG1lZXQiPgogICAgICAgICAgICAgIDxnIHRyYW5zZm9ybT0idHJhbnNsYXRlKDAsMTI4MCkgc2NhbGUoMC4xLC0wLjEpIiBmaWxsPSIjRkZGRkZGIiBzdHJva2U9Im5vbmUiPgogICAgICAgICAgICAgIDxwYXRoIGQ9Ik02MDU1IDExNjg0IGMtOTY5IC03NSAtMTgxOSAtMzY1IC0yNjAwIC04ODkgLTMwMSAtMjAxIC01MzMgLTM5MyAtNzk1IC02NTUgLTI2NyAtMjY3IC00NTYgLTQ5OCAtNjY1IC04MTAgLTQ3NSAtNzEyIC03NDkgLTE0NjEgLTg1NyAtMjM0MiAtMjAgLTE2MiAtMjIgLTIyOSAtMjIgLTU4OCAwIC00MjkgMTAgLTU3MCA2NSAtODg4IDE4NiAtMTA4NSA2OTcgLTIwNzAgMTQ3OSAtMjg1MiAyNjcgLTI2NyA0OTggLTQ1NiA4MTAgLTY2NSA2MzggLTQyNSAxMzMxIC02OTggMjA4MSAtODE5IDMyOCAtNTMgNDI3IC02MCA4NDkgLTYwIDQyMiAwIDUyMSA3IDg0OSA2MCAxOTk3IDMyMiAzNjUzIDE3ODAgNDIyNiAzNzIwIDg5IDMwMiAxNDUgNTc2IDE4NyA5MTYgMjAgMTYyIDIyIDIyOSAyMiA1ODggMCA0MjkgLTEwIDU3MiAtNjUgODg4IC0xMjUgNzI0IC0zOTUgMTQwOCAtNzk1IDIwMTYgLTgxMSAxMjMxIC0yMDk2IDIwNzEgLTM1NDMgMjMxNiAtMjkyIDQ5IC00NDAgNjEgLTgxNiA2NCAtMTk4IDIgLTM4MiAyIC00MTAgMHogbTc5NSAtODI5IGM5MzEgLTk3IDE3OTggLTQ3NCAyNDkwIC0xMDgyIDgzMiAtNzMxIDEzNTQgLTE3MDUgMTUwMCAtMjc5NSAxMTcgLTg4MSAtMzkgLTE3OTIgLTQ0NCAtMjU5MyAtMjY0IC01MjAgLTYxMiAtOTY4IC0xMDU2IC0xMzU4IC0xMzQ1IC0xMTgxIC0zMjkwIC0xNDQwIC00ODk2IC02NTMgLTg4OSA0MzUgLTE2MDYgMTE0NSAtMjA0OCAyMDI3IC02MzUgMTI2NSAtNjMyIDI3NTAgOCA0MDE0IDI2NCA1MjAgNjEyIDk2OCAxMDU2IDEzNTggNjcwIDU4OCAxNTAxIDk1OSAyNDAwIDEwNzIgMjkzIDM3IDY5NCA0MSA5OTAgMTB6Ii8+CiAgICAgICAgICAgICAgPHBhdGggZD0iTTU3MTUgOTM2MSBjLTQ4IC0yMiAtNzkgLTU0IC0xMDAgLTEwMyAtMTMgLTMzIC0xNSAtMTU4IC0xNSAtMTA0OCBsMCAtMTAxMCAtMTAxMiAwIGMtOTYzIDAgLTEwMTUgLTEgLTEwNTMgLTE5IC00OCAtMjIgLTc5IC01NCAtMTAwIC0xMDMgLTEzIC0zMiAtMTUgLTEyMiAtMTUgLTY3OCAwIC01NTYgMiAtNjQ2IDE1IC02NzggMjEgLTQ5IDUyIC04MSAxMDAgLTEwMyAzOCAtMTggOTAgLTE5IDEwNTMgLTE5IGwxMDEyIDAgMCAtMTAxMiBjMCAtOTYzIDEgLTEwMTUgMTkgLTEwNTMgMjIgLTQ4IDU0IC03OSAxMDMgLTEwMCAzMiAtMTMgMTIyIC0xNSA2ODAgLTE1IDYwMiAwIDY0NiAyIDY4MyAxOSA1MCAyMiA5MSA2OSAxMDUgMTE5IDYgMjQgMTAgMzgxIDEwIDEwNDAgbDAgMTAwMiAxMDEwIDAgYzg5MCAwIDEwMTUgMiAxMDQ4IDE1IDQ5IDIxIDgxIDUyIDEwMyAxMDAgMTcgMzggMTkgNzkgMTkgNjg1IDAgNjA0IC0yIDY0OCAtMTkgNjg1IC0yMiA1MCAtNjkgOTEgLTExOSAxMDUgLTI0IDYgLTM4MSAxMCAtMTAzOSAxMCBsLTEwMDMgMCAwIDEwMDMgYzAgNjU4IC00IDEwMTUgLTEwIDEwMzkgLTE0IDUwIC01NSA5NyAtMTA1IDExOSAtMzcgMTcgLTgxIDE5IC02ODUgMTkgLTYwNiAwIC02NDcgLTIgLTY4NSAtMTl6Ii8+CiAgICAgICAgICAgICAgPC9nPgogICAgICAgICAgICA8L3N2Zz4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGxhYmVsIHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IHRvcDogMC4zdmg7IGN1cnNvcjogcG9pbnRlcjsiIHRpdGxlPSJDbGljayBwYXJhIGFncmVnYXIgcmVwb3NpdG9yaW8iPlJFUE9TSVRPUklPPC9sYWJlbD4KICAgICAgICA8L2E+CiAgICAgIDwvdGg+CiAgICA8L3RyPgogIDwvdGhlYWQ+CiAgPHRib2R5IGlkPSJ0Ym9keVJlcG9zIj4KICA8L3Rib2R5Pgo8L3RhYmxlPgo8ZGl2IGlkPSJkaWFsb2ctYWRkIiBjbGFzcz0iZGlhbG9nLWNvbnRhaW5lciI+CiAgPGRpdiBjbGFzcz0iZGlhbG9nLXRpdGxlIj5SZXBvc2l0b3Jpb3MgRG9ja2VyIGVuIDxiIHN0eWxlPSJjb2xvcjogIzAwNzViNjsiPntzZXJ2ZXJuYW1lfTwvYj48L2Rpdj4KICA8ZGl2IGNsYXNzPSJkaWFsb2ctY29udGVudCIgaWQ9ImRpYWxvZy1hZGQtbWVuc2FqZSI+CiAgICA8YnI+CiAgICA8bGFiZWwgY2xhc3M9ImNoZWNrYm94LWNvbnRhaW5lciIgc3R5bGU9ImN1cnNvcjogZGVmYXVsdDsgbWFyZ2luLWJvdHRvbTogMXZoOyI+PGI+VXJsOiZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOzwvYj4gIAogICAgICAgICAgPGlucHV0IGlkPSJ0eHRfcmVwb19uYW1lIiB0eXBlPSJ0ZXh0IiBjbGFzcz0idGV4dGJveCIgcGxhY2Vob2xkZXI9IlJlcG9zaXRvcmlvIj4KICAgIDwvbGFiZWw+IAogICAgPGJyPgogICAgPGxhYmVsIGNsYXNzPSJjaGVja2JveC1jb250YWluZXIiIHN0eWxlPSJjdXJzb3I6IGRlZmF1bHQ7IG1hcmdpbi1ib3R0b206IDF2aDsiPjxiPlVzdWFyaW86Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7PC9iPiAgCiAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgaWQ9InR4dF9yZXBvX3VzdSIgY2xhc3M9InRleHRib3giPgogICAgPC9sYWJlbD4KICAgIDxicj4KICAgIDxsYWJlbCBjbGFzcz0iY2hlY2tib3gtY29udGFpbmVyIiBzdHlsZT0iY3Vyc29yOiBkZWZhdWx0OyI+PGI+Q29udHJhc2XDsWE6PC9iPiAgCiAgICAgICAgICA8aW5wdXQgdHlwZT0icGFzc3dvcmQiIGlkPSJ0eHRfcmVwb19wYXNzIiBjbGFzcz0idGV4dGJveCIgPgogICAgPC9sYWJlbD4gCiAgPC9kaXY+CiAgPGRpdiBpZD0iZGlhbG9nLXBhbmVsLWJvdG9uZXMiIGNsYXNzPSJkaWFsb2ctYnV0dG9ucyIgc3R5bGU9InRleHQtYWxpZ246IHJpZ2h0OyI+CiAgICA8YnV0dG9uIGlkPSJkaWFsb2ctYWRkLWJ0bk9rIiBjbGFzcz0iYnRuIGJ0bi1zZWNvbmRhcnkiIG9uY2xpY2s9ImFkZFJlcG8oKSI+QWdyZWdhcjwvYnV0dG9uPgogICAgPGJ1dHRvbiBpZD0iZGlhbG9nLWFkZC1idG5DYW5jZWwiIGNsYXNzPSJidG4gYnRuLWdyaXMiIG9uY2xpY2s9ImNsb3NlRGlhbG9nKCdkaWFsb2ctYWRkJykiPkNhbmNlbGFyPC9idXR0b24+CiAgPC9kaXY+CjwvZGl2Pgo8ZGl2IGlkPSJkaWFsb2ctYWxlcnQiIGNsYXNzPSJkaWFsb2ctY29udGFpbmVyIj4KICA8ZGl2IGNsYXNzPSJkaWFsb2ctdGl0bGUiPlJlcG9zaXRvcmlvcyBEb2NrZXIgZW4gPGIgc3R5bGU9ImNvbG9yOiAjMDA3NWI2OyI+e3NlcnZlcm5hbWV9PC9iPjwvZGl2PgogIDxkaXYgY2xhc3M9ImRpYWxvZy1jb250ZW50IiBpZD0iZGlhbG9nLWFsZXJ0LW1lbnNhamUiPjwvZGl2PgogIDxkaXYgY2xhc3M9ImRpYWxvZy1idXR0b25zIiBzdHlsZT0idGV4dC1hbGlnbjogcmlnaHQ7Ij4KICAgIDxidXR0b24gaWQ9ImRpYWxvZy1hbGVydC1idG5PayIgY2xhc3M9InByaW1hcnkiIG9uY2xpY2s9ImNsb3NlRGlhbG9nKCdkaWFsb2ctYWxlcnQnKSI+QWNlcHRhcjwvYnV0dG9uPgogIDwvZGl2Pgo8L2Rpdj4=";
files["listPs.html"] = "PGgyIHN0eWxlPSJmbG9hdDogbGVmdDsiPkNvbnRlbmVkb3JlcyBEb2NrZXIgZW4gPGIgc3R5bGU9ImNvbG9yOiAjMDA3NWI2OyI+e3NlcnZlcm5hbWV9PC9iPjwvaDI+Cjx0YWJsZT4KICA8dGhlYWQ+CiAgICA8dHI+CiAgICAgIDx0aCBjb2xzcGFuPSI3Ij4KICAgICAgICAgIDxhIGhyZWY9IiMiIGNsYXNzPSJidG4gYnRuLXNlY29uZGFyeSIgc3R5bGU9Im1hcmdpbi1sZWZ0OiAxMHB4OyBoZWlnaHQ6IDIwcHg7IGZsb2F0OiBsZWZ0OyIgb25jbGljaz0ib3BlbkFkZFBzKCkiPgogICAgICAgICAgICA8ZGl2IHN0eWxlPSJ3aWR0aDogMzBweDsgZmxvYXQ6IGxlZnQ7IHBvc2l0aW9uOiByZWxhdGl2ZTsgdG9wOiAtMC4ydmgiPgogICAgICAgICAgICAgIDxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB2ZXJzaW9uPSIxLjAiIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld0JveD0iMCAwIDEyODAgMTI4MCIgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCI+CiAgICAgICAgICAgICAgICA8ZyB0cmFuc2Zvcm09InRyYW5zbGF0ZSgwLDEyODApIHNjYWxlKDAuMSwtMC4xKSIgZmlsbD0iI0ZGRkZGRiIgc3Ryb2tlPSJub25lIj4KICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik02MDU1IDExNjg0IGMtOTY5IC03NSAtMTgxOSAtMzY1IC0yNjAwIC04ODkgLTMwMSAtMjAxIC01MzMgLTM5MyAtNzk1IC02NTUgLTI2NyAtMjY3IC00NTYgLTQ5OCAtNjY1IC04MTAgLTQ3NSAtNzEyIC03NDkgLTE0NjEgLTg1NyAtMjM0MiAtMjAgLTE2MiAtMjIgLTIyOSAtMjIgLTU4OCAwIC00MjkgMTAgLTU3MCA2NSAtODg4IDE4NiAtMTA4NSA2OTcgLTIwNzAgMTQ3OSAtMjg1MiAyNjcgLTI2NyA0OTggLTQ1NiA4MTAgLTY2NSA2MzggLTQyNSAxMzMxIC02OTggMjA4MSAtODE5IDMyOCAtNTMgNDI3IC02MCA4NDkgLTYwIDQyMiAwIDUyMSA3IDg0OSA2MCAxOTk3IDMyMiAzNjUzIDE3ODAgNDIyNiAzNzIwIDg5IDMwMiAxNDUgNTc2IDE4NyA5MTYgMjAgMTYyIDIyIDIyOSAyMiA1ODggMCA0MjkgLTEwIDU3MiAtNjUgODg4IC0xMjUgNzI0IC0zOTUgMTQwOCAtNzk1IDIwMTYgLTgxMSAxMjMxIC0yMDk2IDIwNzEgLTM1NDMgMjMxNiAtMjkyIDQ5IC00NDAgNjEgLTgxNiA2NCAtMTk4IDIgLTM4MiAyIC00MTAgMHogbTc5NSAtODI5IGM5MzEgLTk3IDE3OTggLTQ3NCAyNDkwIC0xMDgyIDgzMiAtNzMxIDEzNTQgLTE3MDUgMTUwMCAtMjc5NSAxMTcgLTg4MSAtMzkgLTE3OTIgLTQ0NCAtMjU5MyAtMjY0IC01MjAgLTYxMiAtOTY4IC0xMDU2IC0xMzU4IC0xMzQ1IC0xMTgxIC0zMjkwIC0xNDQwIC00ODk2IC02NTMgLTg4OSA0MzUgLTE2MDYgMTE0NSAtMjA0OCAyMDI3IC02MzUgMTI2NSAtNjMyIDI3NTAgOCA0MDE0IDI2NCA1MjAgNjEyIDk2OCAxMDU2IDEzNTggNjcwIDU4OCAxNTAxIDk1OSAyNDAwIDEwNzIgMjkzIDM3IDY5NCA0MSA5OTAgMTB6Ii8+CiAgICAgICAgICAgICAgICA8cGF0aCBkPSJNNTcxNSA5MzYxIGMtNDggLTIyIC03OSAtNTQgLTEwMCAtMTAzIC0xMyAtMzMgLTE1IC0xNTggLTE1IC0xMDQ4IGwwIC0xMDEwIC0xMDEyIDAgYy05NjMgMCAtMTAxNSAtMSAtMTA1MyAtMTkgLTQ4IC0yMiAtNzkgLTU0IC0xMDAgLTEwMyAtMTMgLTMyIC0xNSAtMTIyIC0xNSAtNjc4IDAgLTU1NiAyIC02NDYgMTUgLTY3OCAyMSAtNDkgNTIgLTgxIDEwMCAtMTAzIDM4IC0xOCA5MCAtMTkgMTA1MyAtMTkgbDEwMTIgMCAwIC0xMDEyIGMwIC05NjMgMSAtMTAxNSAxOSAtMTA1MyAyMiAtNDggNTQgLTc5IDEwMyAtMTAwIDMyIC0xMyAxMjIgLTE1IDY4MCAtMTUgNjAyIDAgNjQ2IDIgNjgzIDE5IDUwIDIyIDkxIDY5IDEwNSAxMTkgNiAyNCAxMCAzODEgMTAgMTA0MCBsMCAxMDAyIDEwMTAgMCBjODkwIDAgMTAxNSAyIDEwNDggMTUgNDkgMjEgODEgNTIgMTAzIDEwMCAxNyAzOCAxOSA3OSAxOSA2ODUgMCA2MDQgLTIgNjQ4IC0xOSA2ODUgLTIyIDUwIC02OSA5MSAtMTE5IDEwNSAtMjQgNiAtMzgxIDEwIC0xMDM5IDEwIGwtMTAwMyAwIDAgMTAwMyBjMCA2NTggLTQgMTAxNSAtMTAgMTAzOSAtMTQgNTAgLTU1IDk3IC0xMDUgMTE5IC0zNyAxNyAtODEgMTkgLTY4NSAxOSAtNjA2IDAgLTY0NyAtMiAtNjg1IC0xOXoiLz4KICAgICAgICAgICAgICAgIDwvZz4KICAgICAgICAgICAgICA8L3N2Zz4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxsYWJlbCBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyB0b3A6IDAuM3ZoOyBjdXJzb3I6IHBvaW50ZXI7IiB0aXRsZT0iQ2xpY2sgcGFyYSBjcmVhciBjb250ZW5lZG9yIj5Db250ZW5lZG9yPC9sYWJlbD4KICAgICAgICAgIDwvYT4gICAgICAgIAogICAgICA8L3RoPgogICAgPC90cj4KICAgIDx0cj4KICAgICAgPHRoPkFDQ0nDk048L3RoPgogICAgICA8dGg+Tk9NQlJFPC90aD4KICAgICAgPCEtLXRoPklEIENPTlRFTkVET1I8L3RoLS0+CiAgICAgIDx0aD5JTUFHRU48L3RoPgogICAgICA8dGg+Q09NQU5ETzwvdGg+CiAgICAgIDx0aD5DUkVBRE88L3RoPgogICAgICA8dGg+RVNUQURPPC90aD4KICAgICAgPHRoPlBVRVJUTzwvdGg+CiAgICA8L3RyPgogIDwvdGhlYWQ+CiAgPHRib2R5IGlkPSJ0Ym9keVBzIj4KICA8L3Rib2R5Pgo8L3RhYmxlPgo8ZGl2IGlkPSJkaWFsb2ctY29uZmlybSIgY2xhc3M9ImRpYWxvZy1jb250YWluZXIiPgogIDxkaXYgY2xhc3M9ImRpYWxvZy10aXRsZSI+Q29udGVuZWRvcmVzIERvY2tlciBlbiA8YiBzdHlsZT0iY29sb3I6ICMwMDc1YjY7Ij57c2VydmVybmFtZX08L2I+PC9kaXY+CiAgPGRpdiBjbGFzcz0iZGlhbG9nLWNvbnRlbnQiIGlkPSJkaWFsb2ctY29uZmlybS1tZW5zYWplIj48L2Rpdj4KICA8ZGl2IGNsYXNzPSJkaWFsb2ctYnV0dG9ucyIgc3R5bGU9InRleHQtYWxpZ246IHJpZ2h0OyI+CiAgICA8YnV0dG9uIGlkPSJkaWFsb2ctY29uZmlybS1idG5PayIgY2xhc3M9ImJ0biBidG4tZGFuZ2VyIiBvbmNsaWNrPSIiPlNpPC9idXR0b24+CiAgICA8YnV0dG9uIGlkPSJkaWFsb2ctY29uZmlybS1idG5DYW5jZWwiIGNsYXNzPSJidG4iIG9uY2xpY2s9ImNsb3NlRGlhbG9nKCdkaWFsb2ctY29uZmlybScpIj5ObzwvYnV0dG9uPgogIDwvZGl2Pgo8L2Rpdj4KPGRpdiBpZD0iZGlhbG9nLWFkZC1wcyIgY2xhc3M9ImRpYWxvZy1jb250YWluZXIiPgogIDxkaXYgY2xhc3M9ImRpYWxvZy10aXRsZSI+Q29udGVuZWRvcmVzIERvY2tlciBlbiA8YiBzdHlsZT0iY29sb3I6ICMwMDc1YjY7Ij57c2VydmVybmFtZX08L2I+PC9kaXY+CiAgPGRpdiBjbGFzcz0iZGlhbG9nLWNvbnRlbnQiIGlkPSJkaWFsb2ctYWRkLXBzLW1lbnNhamUiPgogICAgPGJyPgogICAgPGxhYmVsIGNsYXNzPSJjaGVja2JveC1jb250YWluZXIiIHN0eWxlPSJjdXJzb3I6IGRlZmF1bHQ7IG1hcmdpbi1ib3R0b206IDF2aDsiPjxiPkltYWdlbjombmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDs8L2I+CiAgICAgICAgPHNlbGVjdCBjbGFzcz0ic2VsZWN0LWJveCIgaWQ9ImNieF9pbWdzIj4KICAgICAgPC9zZWxlY3Q+CiAgICAgPC9sYWJlbD4KICAgIDxicj4KICAgIDxsYWJlbCBjbGFzcz0iY2hlY2tib3gtY29udGFpbmVyIiBzdHlsZT0iY3Vyc29yOiBkZWZhdWx0OyBtYXJnaW4tYm90dG9tOiAxdmg7Ij48Yj5Db250ZW5lZG9yOiZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOzwvYj4gIAogICAgICAgICAgPGlucHV0IGlkPSJ0eHRfcHNfbmFtZSIgdHlwZT0idGV4dCIgY2xhc3M9InRleHRib3giIHBsYWNlaG9sZGVyPSJOb21icmUgKG9wY2lvbmFsKSI+CiAgICA8L2xhYmVsPiAKICAgIDxicj4KICAgIDxsYWJlbCBjbGFzcz0iY2hlY2tib3gtY29udGFpbmVyIiBzdHlsZT0iY3Vyc29yOiBkZWZhdWx0OyBtYXJnaW4tYm90dG9tOiAxdmg7Ij48Yj5QdWVydG9zOiZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOzwvYj4gIAogICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGlkPSJ0eHRfcHNfcG9ydHMiIGNsYXNzPSJ0ZXh0Ym94IiBwbGFjZWhvbGRlcj0iTG9jYWw6Q29udGVuZWRvciI+CiAgICA8L2xhYmVsPgogICAgPGJyPgogICAgPGxhYmVsIGNsYXNzPSJjaGVja2JveC1jb250YWluZXIiIHN0eWxlPSJjdXJzb3I6IGRlZmF1bHQ7IG1hcmdpbi1ib3R0b206IDF2aDsiPjxiPkV4dHJhOiZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOzwvYj4gIAogICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGlkPSJ0eHRfcHNfY21kZXh0IiBjbGFzcz0idGV4dGJveCIgcGxhY2Vob2xkZXI9Ii1pdCAtdSAuLi4gKG9wY2lvbmFsKSI+CiAgICA8L2xhYmVsPgogICAgPGJyPgogICAgPGxhYmVsIGNsYXNzPSJjaGVja2JveC1jb250YWluZXIiIHN0eWxlPSJjdXJzb3I6IGRlZmF1bHQ7IG1hcmdpbi1ib3R0b206IDF2aDsiPjxiPkRpcmVjdG9yaW8gQ29tcGFydGlkbzo8L2I+ICAKICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0idHh0X3BzX2RpcnMiIGNsYXNzPSJ0ZXh0Ym94IiBwbGFjZWhvbGRlcj0iTG9jYWw6Q29udGVuZWRvciAob3BjaW9uYWwpIj4KICAgIDwvbGFiZWw+IAogICAgPGJyPgogICAgPGxhYmVsIGNsYXNzPSJjaGVja2JveC1jb250YWluZXIiIHN0eWxlPSJjdXJzb3I6IGRlZmF1bHQ7Ij48Yj5EaXJlY3RvcmlvIGRlIFRyYWJham86Jm5ic3A7Jm5ic3A7PC9iPiAgCiAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgaWQ9InR4dF9wc193ZGlyIiBjbGFzcz0idGV4dGJveCIgcGxhY2Vob2xkZXI9IkNvbnRlbmVkb3IgKG9wY2lvbmFsKSI+CiAgICA8L2xhYmVsPgogIDwvZGl2PgogIDxkaXYgaWQ9ImRpYWxvZy1wYW5lbC1ib3RvbmVzIiBjbGFzcz0iZGlhbG9nLWJ1dHRvbnMiIHN0eWxlPSJ0ZXh0LWFsaWduOiByaWdodDsiPgogICAgPGJ1dHRvbiBpZD0iZGlhbG9nLWFkZC1idG5PayIgY2xhc3M9ImJ0biBidG4tc2Vjb25kYXJ5IiBvbmNsaWNrPSJhZGRQcygpIj5BZ3JlZ2FyPC9idXR0b24+CiAgICA8YnV0dG9uIGlkPSJkaWFsb2ctYWRkLWJ0bkNhbmNlbCIgY2xhc3M9ImJ0biBidG4tZ3JpcyIgb25jbGljaz0iY2xvc2VEaWFsb2coJ2RpYWxvZy1hZGQtcHMnKSI+Q2FuY2VsYXI8L2J1dHRvbj4KICA8L2Rpdj4KPC9kaXY+CjxkaXYgaWQ9ImRpYWxvZy1hbGVydCIgY2xhc3M9ImRpYWxvZy1jb250YWluZXIiPgogIDxkaXYgY2xhc3M9ImRpYWxvZy10aXRsZSI+Q29udGVuZWRvcmVzIERvY2tlciBlbiA8YiBzdHlsZT0iY29sb3I6ICMwMDc1YjY7Ij57c2VydmVybmFtZX08L2I+PC9kaXY+CiAgPGRpdiBjbGFzcz0iZGlhbG9nLWNvbnRlbnQiIGlkPSJkaWFsb2ctYWxlcnQtbWVuc2FqZSI+PC9kaXY+CiAgPGRpdiBjbGFzcz0iZGlhbG9nLWJ1dHRvbnMiIHN0eWxlPSJ0ZXh0LWFsaWduOiByaWdodDsiPgogICAgPGJ1dHRvbiBpZD0iZGlhbG9nLWFsZXJ0LWJ0bk9rIiBjbGFzcz0icHJpbWFyeSIgb25jbGljaz0iY2xvc2VEaWFsb2coJ2RpYWxvZy1hbGVydCcpIj5BY2VwdGFyPC9idXR0b24+CiAgPC9kaXY+CjwvZGl2Pg==";
files["acercade.html"] = "";
files["main.js"] = "";
files["css"] = "";

app.use(bodyParser.urlencoded({ extended: true }));
app.use(bodyParser.json());

app.get('/app/:file?', (req, res) => {
	const file = (req.params.file)?req.params.file:'index.html';
 	let CSSs = "";
	try {
		if(file == "exit"){
			process.exit(0);
		}else{
			const data = Buffer.from(files[file], 'base64').toString('utf-8');
	  		CSSs = loadCSS("css");
	  		res.send(data.replace('<style type="text/css"></style>','<style type="text/css">'+CSSs+'</style>'));	
		}  
	} catch (err) {
	  res.status(500).send('{"estado":"-1","mensaje":"'+err.message+'"}');
	}
  
});


app.get('/app/js/:file', (req, res) => {
	const file = (req.params.file)?req.params.file:'';
	const os = require('os');

	try {
		const data = Buffer.from(files[file], 'base64').toString('utf-8');
		res.send(data.replace("<-HostName->",os.hostname()));	
	} catch (err) {
		res.status(500).send('{"estado":"-2","mensaje":"'+err.message+'"}');
	}
}); 

app.get('/app/api/images', (req, res) => {
	const { exec } = require('child_process');
	exec('docker images --format "{{json .}}"', (error, stdout, stderr) => {
	  if (stderr) {
		res.send('{"estado":"-3","mensaje":"'+stderr.replace(/"/g,'\\"').replace(/\n/g, " ").trim()+'"}');
		return;
	  }
	   res.send('{"estado":"0","mensaje":"OK","images":'+JSON.stringify(stdout.split('\n'))+'}');
	});
});

app.get('/app/api/container', (req, res) => {
	const { exec } = require('child_process');
	exec('docker ps -a --format "{{json .}}"', (error, stdout, stderr) => {

	  if (stderr) {
		res.send('{"estado":"-4","mensaje":"'+stderr.replace(/"/g,'\\"').replace(/\n/g, " ").trim()+'"}');
		return;
	  }
	   res.send('{"estado":"0","mensaje":"OK","containers":'+JSON.stringify(stdout.split('\n'))+'}');
	});
});

app.get('/app/api/container/:id', (req, res) => {
	const { exec } = require('child_process');
	exec('docker ps -a --format "{{json .}}" --filter id=' + req.params.id, (error, stdout, stderr) => {
	  if (stderr) {
		res.send('{"estado":"-5","mensaje":"'+stderr.replace(/"/g,'\\"').replace(/\n/g, " ").trim()+'"}');
		return;
	  }
	   res.send('{"estado":"0","mensaje":"OK","containers":'+JSON.stringify(stdout.split('\n'))+'}');
	});
});

app.delete('/app/api/container/:id', (req, res) => {
	const { exec } = require('child_process');
	exec("docker rm " + req.params.id, (error, stdout, stderr) => {
	  if (stderr) {
		res.send('{"estado":"-6","mensaje":"'+stderr.replace(/"/g,'\\"').replace(/\n/g, " ").trim()+'"}');
		return;
	  }
	   res.send('{"estado":"0","mensaje":"OK","containers":'+JSON.stringify(stdout.split('\n'))+'}');
	});
});


app.put('/app/api/container/start/:id', (req, res) => {
	const { exec } = require('child_process');
	exec("docker start " + req.params.id, (error, stdout, stderr) => {
	  if (stderr) {
		res.send('{"estado":"-7","mensaje":"'+stderr.replace(/"/g,'\\"').replace(/\n/g, " ").trim()+'"}');
		return;
	  }
	   res.send('{"estado":"0","mensaje":"OK","containers":'+JSON.stringify(stdout.split('\n'))+'}');
	});
});

app.put('/app/api/container/stop/:id', (req, res) => {
	const { exec } = require('child_process');
	exec("docker stop " + req.params.id, (error, stdout, stderr) => {
	  if (stderr) {
		res.send('{"estado":"-8","mensaje":"'+stderr.replace(/"/g,'\\"').replace(/\n/g, " ").trim()+'"}');
		return;
	  }
	   res.send('{"estado":"0","mensaje":"OK","containers":'+JSON.stringify(stdout.split('\n'))+'}');
	});
});

app.get('/app/api/repositories', (req, res) => {
	const path = require('path');
	const fileDocker = path.join( (process.env.HOME || process.env.USERPROFILE), ".docker", "config.json");
	try {
		const objDk = JSON.parse(fs.readFileSync(fileDocker, 'utf8'));

		let repos = [];
		let index = 0;
		for (let propiedad in objDk.auths) {
			repos[index] = propiedad
		    index++;
		}
		res.send('{"estado":"0","mensaje":"OK","repositories":'+JSON.stringify(repos)+'}');  
	} catch (err) {
	  res.status(500).send('{"estado":"-9","mensaje":"'+err.message+'"}');
	}

});

app.post('/app/api/repository', (req, res) => {
	const { exec } = require('child_process');
	const login = exec("docker login " + req.body.repo + " -u " + req.body.us + " --password-stdin", (error, stdout, stderr) => {
	  if (stderr) {
		res.send('{"estado":"-9","mensaje":"'+stderr.replace(/"/g,'\\"').replace(/\n/g, " ").trim()+'"}');
		return;
	  }
	   res.send('{"estado":"0","mensaje":"OK","repo":'+JSON.stringify(stdout.split('\n'))+'}');
	});
	login.stdin.write(req.body.pass);
	login.stdin.end();
});

app.post('/app/api/image', (req, res) => {
	const { exec } = require('child_process');
	exec("docker build -t " + req.body.repo + req.body.name + ':' +req.body.tag +' "' + req.body.path.trim() + '"', (error, stdout, stderr) => {
	  if (stderr) {
	  	let nameimg = req.body.name + ":" + req.body.tag;
	  	let regex = new RegExp(`${nameimg}.*done`, 'g');
	  	if(stderr.match(regex) !== null){
	  		res.send('{"estado":"0","mensaje":"OK"}');
	  	}else
			res.send('{"estado":"-10","mensaje":"'+stderr.replace(/"/g,'\\"').replace(/\n/g, " ").trim()+'"}');
		return;
	  }
	   res.send('{"estado":"0","mensaje":"OK"}');
	});
});

app.delete('/app/api/image/:id', (req, res) => {
	const { exec } = require('child_process');
	let image = (req.body.tag != '')?req.body.name + ":" + req.body.tag:req.body.name;
	exec("docker image rm -f " + image, (error, stdout, stderr) => {
	  if (stderr) {
		res.send('{"estado":"-10","mensaje":"'+stderr.replace(/"/g,'\\"').replace(/\n/g, " ").trim()+'"}');
		return;
	  }
	   res.send('{"estado":"0","mensaje":"OK","id":"'+req.params.id+'"}');
	});
});

app.post('/app/api/container', (req, res) => {
	const { exec } = require('child_process');
	const name = (req.body.name != "")? " --name " + req.body.name: "";
	const dirs = (req.body.dirs != "")? ' -v "' + req.body.dirs + '"': "";
	const wdir = (req.body.wdir != "")? ' -w "' + req.body.wdir + '"': "";
	const cmdext = (req.body.cmdext != "")? + ' ' + req.body.cmdext + ' ' : "";
	exec("docker run -d" + name + " -p " + req.body.ports + cmdext +dirs + wdir + " " + req.body.image, (error, stdout, stderr) => {
	  if (stderr) {
		res.send('{"estado":"-11","mensaje":"'+stderr.replace(/"/g,'\\"').replace(/\n/g, " ").trim()+'"}');
		return;
	  }
	   res.send('{"estado":"0","mensaje":"OK"}');
	   //res.send('{"estado":"0","mensaje":"OK","container":'+JSON.stringify(stdout.split('\n'))+'}');
	});
});

app.put('/app/api/image/:id', (req, res) => {
	const { exec } = require('child_process');
	exec('docker push "' + req.body.name + ':' +req.body.tag + '"', (error, stdout, stderr) => {
	  if (stderr) {
	  	res.send('{"estado":"-12","mensaje":"'+stderr.replace(/"/g,'\\"').replace(/\n/g, " ").trim()+'"}');
		return;
	  }
	  res.send('{"estado":"0","mensaje":"OK","id":"'+req.params.id+'"}');
	});
});

app.listen(port,() => {
  console.log(`Servidor en puerto ${port}`);
});

function loadCSS(carpeta){
	return Buffer.from(files["css"], 'base64').toString('utf-8');
} 